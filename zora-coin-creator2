'use client';

import { useState } from 'react';
import {
  WagmiConfig,
  createConfig,
  configureChains,
  useAccount,
  useNetwork,
  useSwitchNetwork,
  http,
} from 'wagmi';
import { base } from 'wagmi/chains'; // ✅ FIXED import
import { ConnectKitProvider, ConnectKitButton } from 'connectkit';

const { chains, publicClient } = configureChains([base], [http()]);

const config = createConfig({
  autoConnect: true,
  publicClient,
});

export default function Home() {
  return (
    <WagmiConfig config={config}>
      <ConnectKitProvider>
        <ZoraCoinCreator />
      </ConnectKitProvider>
    </WagmiConfig>
  );
}

function ZoraCoinCreator() {
  const { address, isConnected } = useAccount();
  const { chain } = useNetwork();
  const { switchNetwork } = useSwitchNetwork();

  const [name, setName] = useState('');
  const [symbol, setSymbol] = useState('');
  const [description, setDescription] = useState('');
  const [imageURL, setImageURL] = useState('');
  const [status, setStatus] = useState('');

  const handleMint = async () => {
    if (!isConnected || !address) {
      alert('Please connect your wallet.');
      return;
    }

    if (chain?.id !== base.id && switchNetwork) {
      switchNetwork(base.id);
      return;
    }

    try {
      setStatus('🚀 Sending to Zora Create API...');

      const res = await fetch('https://create.zora.co/api/editions', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          name,
          description,
          image: imageURL,
          seller_fee_basis_points: 100,
          symbol,
          creator_address: address,
        }),
      });

      const data = await res.json();

      if (res.ok) {
        console.log('✅ Zora Create Success:', data);
        setStatus('✅ Coin created: https://zora.co/collect/' + data.address);
      } else {
        console.log('❌ Zora Create Error:', data);
        setStatus('❌ Failed: ' + (data?.error || JSON.stringify(data)));
      }
    } catch (e) {
      console.error('❌ Network or unexpected error:', e);
      setStatus('❌ Error creating coin.');
    }
  };

  return (
    <main className="p-4 max-w-xl mx-auto">
      <h1 className="text-2xl font-bold mb-4">🪙 Zora Coin Creator</h1>
      <ConnectKitButton />
      <div className="mt-4">
        <input
          className="w-full p-2 border rounded mb-2"
          placeholder="Coin Name"
          value={name}
          onChange={(e) => setName(e.target.value)}
        />
        <input
          className="w-full p-2 border rounded mb-2"
          placeholder="Symbol"
          value={symbol}
          onChange={(e) => setSymbol(e.target.value)}
        />
        <textarea
          className="w-full p-2 border rounded mb-2"
          placeholder="Description"
          value={description}
          onChange={(e) => setDescription(e.target.value)}
        />
        <input
          className="w-full p-2 border rounded mb-2"
          placeholder="Image URL (from Craiyon or similar)"
          value={imageURL}
          onChange={(e) => setImageURL(e.target.value)}
        />
        <button
          onClick={handleMint}
          className="bg-black text-white px-4 py-2 rounded w-full"
        >
          🚀 Mint Coin
        </button>
      </div>
      <p className="mt-4 text-sm text-gray-600 whitespace-pre-wrap">{status}</p>
    </main>
  );
}
